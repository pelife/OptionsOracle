<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FlatFile.Core</name>
    </assembly>
    <members>
        <member name="T:FlatFile.Core.Base.FlatFileEngine`2">
            <summary>
            Class FlatFileEngine.
            </summary>
            <typeparam name="TFieldSettings">The type of the t field settings.</typeparam>
            <typeparam name="TLayoutDescriptor">The type of the t layout descriptor.</typeparam>
        </member>
        <member name="T:FlatFile.Core.IFlatFileEngine">
            <summary>
            Interface IFlatFileEngine
            </summary>
        </member>
        <member name="M:FlatFile.Core.IFlatFileEngine.Read``1(System.IO.Stream)">
            <summary>
            Reads the specified stream.
            </summary>
            <typeparam name="TEntity">The type of the t entity.</typeparam>
            <param name="stream">The stream.</param>
            <returns>IEnumerable&lt;TEntity&gt;.</returns>
        </member>
        <member name="M:FlatFile.Core.IFlatFileEngine.Write``1(System.IO.Stream,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Writes to the specified stream.
            </summary>
            <typeparam name="TEntity">The type of the t entity.</typeparam>
            <param name="stream">The stream.</param>
            <param name="entries">The entries.</param>
        </member>
        <member name="F:FlatFile.Core.Base.FlatFileEngine`2._handleEntryReadError">
            <summary>
            The handle entry read error func
            </summary>
        </member>
        <member name="M:FlatFile.Core.Base.FlatFileEngine`2.#ctor(System.Func{System.String,System.Exception,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:FlatFile.Core.Base.FlatFileEngine`2"/> class.
            </summary>
            <param name="handleEntryReadError">The handle entry read error.</param>
        </member>
        <member name="M:FlatFile.Core.Base.FlatFileEngine`2.Read``1(System.IO.Stream)">
            <summary>
            Reads the specified stream.
            </summary>
            <typeparam name="TEntity">The type of the t entity.</typeparam>
            <param name="stream">The stream.</param>
            <returns>IEnumerable&lt;TEntity&gt;.</returns>
            <exception cref="T:FlatFile.Core.Exceptions.ParseLineException">Impossible to parse line</exception>
        </member>
        <member name="M:FlatFile.Core.Base.FlatFileEngine`2.ProcessHeader(System.IO.StreamReader)">
            <summary>
            Processes the header.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:FlatFile.Core.Base.FlatFileEngine`2.TryParseLine``1(System.String,System.Int32,``0@)">
            <summary>
            Tries to parse the line.
            </summary>
            <typeparam name="TEntity">The type of the t entity.</typeparam>
            <param name="line">The line.</param>
            <param name="lineNumber">The line number.</param>
            <param name="entity">The entity.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:FlatFile.Core.Base.FlatFileEngine`2.WriteEntry``1(System.IO.TextWriter,System.Int32,``0)">
            <summary>
            Writes the entry.
            </summary>
            <typeparam name="TEntity">The type of the t entity.</typeparam>
            <param name="writer">The writer.</param>
            <param name="lineNumber">The line number.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:FlatFile.Core.Base.FlatFileEngine`2.Write``1(System.IO.Stream,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Writes to the specified stream.
            </summary>
            <typeparam name="TEntity">The type of the t entity.</typeparam>
            <param name="stream">The stream.</param>
            <param name="entries">The entries.</param>
        </member>
        <member name="M:FlatFile.Core.Base.FlatFileEngine`2.WriteHeader(System.IO.TextWriter)">
            <summary>
            Writes the header.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:FlatFile.Core.Base.FlatFileEngine`2.WriteFooter(System.IO.TextWriter)">
            <summary>
            Writes the footer.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="P:FlatFile.Core.Base.FlatFileEngine`2.LineBuilder">
            <summary>
            Gets the line builder.
            </summary>
            <value>The line builder.</value>
        </member>
        <member name="P:FlatFile.Core.Base.FlatFileEngine`2.LineParser">
            <summary>
            Gets the line parser.
            </summary>
            <value>The line parser.</value>
        </member>
        <member name="P:FlatFile.Core.Base.FlatFileEngine`2.LayoutDescriptor">
            <summary>
            Gets the layout descriptor.
            </summary>
            <value>The layout descriptor.</value>
        </member>
        <member name="M:FlatFile.Core.Extensions.ExpressionExtensions.GetMemberName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Gets the name of the member specified
            </summary>
            <typeparam name="T">The type referenced</typeparam>
            <typeparam name="TMember">The type of the member referenced</typeparam>
            <param name="expression">The expression referencing the member</param>
            <returns>The name of the member referenced by the expression</returns>
        </member>
        <member name="M:FlatFile.Core.Extensions.ExpressionExtensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Gets the name of the member specified
            </summary>
            <typeparam name="T">The type referenced</typeparam>
            <param name="expression">The expression referencing the member</param>
            <returns>The name of the member referenced by the expression</returns>
        </member>
        <member name="T:FlatFile.Core.Extensions.ReflectionHelper">
            <summary>
            Class ReflectionHelper.
            </summary>
        </member>
        <member name="M:FlatFile.Core.Extensions.ReflectionHelper.CreateInstance``1(System.Boolean)">
            <summary>
            Creates an instance of type <typeparamref name="T"/> using the default constructor.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cached">if set to <c>true</c> [cached].</param>
            <returns>T.</returns>
        </member>
        <member name="M:FlatFile.Core.Extensions.ReflectionHelper.CreateInstance(System.Type,System.Boolean)">
            <summary>
            Creates an instance of type <paramref name="targetType"/> using the default constructor.
            </summary>
            <param name="targetType">Type of the target.</param>
            <param name="cached">if set to <c>true</c> [cached].</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:FlatFile.Core.Extensions.ReflectionHelper.CreateInstance(System.Type,System.Boolean,System.Object[])">
            <summary>
            Creates an instance of type <paramref name="targetType"/> using the specified constructor parameters.
            </summary>
            <param name="targetType">Type of the target.</param>
            <param name="cached">if set to <c>true</c> [cached].</param>
            <param name="parameters">The constructor arguments.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="T:FlatFile.Core.IFlatFileEngineFactory`2">
            <summary>
            Interface IFlatFileEngineFactory
            </summary>
            <typeparam name="TDescriptor">The type of the t descriptor.</typeparam>
            <typeparam name="TFieldSettings">The type of the t field settings.</typeparam>
        </member>
        <member name="M:FlatFile.Core.IFlatFileEngineFactory`2.GetEngine(`0,System.Func{System.String,System.Exception,System.Boolean})">
            <summary>
            Gets the <see cref="T:FlatFile.Core.IFlatFileEngine"/>.
            </summary>
            <param name="descriptor">The descriptor.</param>
            <param name="handleEntryReadError">The handle entry read error func.</param>
            <returns>IFlatFileEngine.</returns>
        </member>
        <member name="T:FlatFile.Core.IFlatFileMultiEngine">
            <summary>
            Interface IFlatFileMultiEngine
            </summary>
        </member>
        <member name="M:FlatFile.Core.IFlatFileMultiEngine.Read(System.IO.Stream)">
            <summary>
            Reads the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:FlatFile.Core.IFlatFileMultiEngine.GetRecords``1">
            <summary>
            Gets any records of type <typeparamref name="T"/> read by <see cref="M:FlatFile.Core.IFlatFileMultiEngine.Read(System.IO.Stream)"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>IEnumerable&lt;T&gt;.</returns>
        </member>
        <member name="P:FlatFile.Core.IFlatFileMultiEngine.HasHeader">
            <summary>
            Gets or sets a value indicating whether this instance has a file header.
            </summary>
            <value><c>true</c> if this instance has a file header; otherwise, <c>false</c>.</value>
        </member>
    </members>
</doc>
